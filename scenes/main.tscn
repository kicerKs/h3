[gd_scene load_steps=6 format=3 uid="uid://bb7v5q6cph0br"]

[ext_resource type="PackedScene" uid="uid://gt3c6cq5nj55" path="res://scenes/world/world.tscn" id="1_kv433"]
[ext_resource type="PackedScene" uid="uid://ch6ncmv23kajx" path="res://ui/gui.tscn" id="2_0l6wj"]
[ext_resource type="PackedScene" uid="uid://c4ckl6pprtqf3" path="res://scenes/world/buildings/mines/minePattern.tscn" id="4_1xkek"]
[ext_resource type="Script" path="res://global/turn_system.gd" id="4_76eem"]
[ext_resource type="Script" path="res://scenes/battle_test.gd" id="4_vsp3o"]
[ext_resource type="Script" path="res://scenes/battle_manager.gd" id="5_ir1db"]

[sub_resource type="GDScript" id="GDScript_re5tf"]
script/source = "extends Node

var current_day: int = 1
var mines: Array

func _ready() -> void:
	pass
	#mines = get_tree().get_nodes_in_group(\"Mines\")
	
	#var turn_system = get_parent().get_node(\"TurnSystem\")
	#var turn_system = get_node(\"/root/global/turn_system\")
	#turn_system.connect(\"update_turn\", self, \"_on_turn_system_update_turn\")
	#turn_system.connect(\"new_day\", self, \"_on_new_day\")
	#get_parent().get_node(\"TurnSystem\")
	
	#create_gold_mine(Vector2(100, 100))
	#create_gold_mine(Vector2(200, 200))
	
#func create_gold_mine(position: Vector2) -> void:
	#var gold_mine_scene = preload(\"res://scenes/world/buildings/mines/minePattern.tscn\")
	#var gold_mine = gold_mine_scene.instantiate() 
	#gold_mine.set_resource_type(\"Gold\")
	#gold_mine.set_production_rate(1000)
	#gold_mine.appearance = Color(1, 1, 0, 1)
	#gold_mine.position = position
	#add_child(gold_mine)
	#mines.append(gold_mine)
			#
#func _on_turn_system_update_turn(day: int, week: int, month: int) -> void:
	#if day != current_day:
		#current_day = day
		#update_mines()
#
#func _on_new_day() -> void:
	#update_mines()
#
#func update_mines() -> void:
	#for mine in mines:
		#var produced_resource = mine.update_day(current_day)
		#if produced_resource.size() > 0:
			#update_player_resources(produced_resource)
#
#func update_player_resources(produced_resource: Dictionary) -> void:
	#print(\"Zasoby gracza: %d jednostek %s\" % [produced_resource[\"amount\"], produced_resource[\"type\"]])
#
func _process(delta: float) -> void:
	pass





func _on_turn_system_new_day() -> void:
	pass # Replace with function body.
"

[node name="Main" type="Node"]
script = SubResource("GDScript_re5tf")

[node name="TurnSystem" type="Node" parent="."]
script = ExtResource("4_76eem")

[node name="World" parent="." instance=ExtResource("1_kv433")]

[node name="GUI" parent="." instance=ExtResource("2_0l6wj")]

[node name="MinePattern" parent="." instance=ExtResource("4_1xkek")]

[connection signal="new_day" from="TurnSystem" to="MinePattern" method="_on_turn_system_new_day"]
[node name="BattleTest" type="Button" parent="."]
offset_right = 8.0
offset_bottom = 8.0
text = "Battle Test"
script = ExtResource("4_vsp3o")

[node name="BattleManager" type="Node" parent="."]
script = ExtResource("5_ir1db")

[connection signal="update_turn" from="TurnSystem" to="GUI" method="_on_turn_system_update_turn"]
[connection signal="pressed" from="BattleTest" to="BattleTest" method="_on_pressed"]
